一.字节转换函数
    h代表host   n代表network  s代表short  l代表long
    1.htonl
        相关函数 htons，ntohl，ntohs
        
        表头文件
        #include <netinet/in.h>

        定义函数
        unsigned long int htonl(unsigned long int hostlong);

        函数说明  将32位主机字符顺序转换成网络字符顺序，htonl()用来将参数指定的32位hostlong转换为网络字符顺序

        返回值 返回对应的网络字符顺序
    
    2.htnos
        相关函数 htonl，ntohl，ntohs

        表头文件
        #include <netinet/in.h>

        定义函数
        unsigned short int htons(unsigned short int hostshort);

        函数说明  将16位主机字符顺序转换成网络字符顺序，htonl()用来将参数指定的16位hostshort转换为网络字符顺序

        返回值 返回对应的网络字符顺序

    3.ntohl
        相关函数 htonl，htons，ntohs

        表头文件
        #include <netinet/in.h>

        定义函数
        unsigned long int ntohl(unsigned long int netlong);

        函数说明  将32位网络字符顺序转换成主机字符顺序，ntohl()用来将参数指定的32位netlong转换为主机字符顺序

        返回值 返回对应的主机字符顺序

    4.ntohs
            相关函数 htonl，ntohl，htons

            表头文件
            #include <netinet/in.h>

            定义函数
            unsigned short int ntohs(unsigned short int netshort);

            函数说明  将16位网络字符顺序转换成主机字符顺序，ntohs()用来将参数指定的16位netshort转换为主机字符顺序

            返回值 返回对应的主机字符顺序

二.IP和域名的转换
    www.baidu.com      212.7.13.156 是32位的整数
    名字地址转换成数字地址   gethostbyname()
    数字地址转换成名字地址   gethostbyaddr()
    函数原型
    struct hostent* gethostbyname(const char *hostname)
    struct hostent* gethostbyaddr(const char *addr,int len,int type) 

    struct hostent定义
    struct hostent{
        char *h_name; //主机的正式名称
        char *h_aliases; //主机的别名
        int h_addrtype; //主机的地址类型
        int h_length; //主机的地址长度，对于IPv4是4字节32位
        char **h_addr_list; //主机的IP地址列表
    }
    #define h_addr h_addr_list[0]; //主机的第一个IP地址

三.字符串的IP和32位的IP转换
    在stuct in_addr结构中用的是32位的IP
    int inet_aton(const char *cp,struct in_addr *inp);
    char *inet_ntoa(struct in_addr in);
    a代表ascii，n代表network。第一个函数表示将a.b.c.d的IP转换称32位的IP，存储在指针inp里面；
    第二函数将32位的IP转换成a.b.c.d的格式。

四.服务信息的函数
    getsockname()
    getpeername()
    getservbyname()
    getservbyport()