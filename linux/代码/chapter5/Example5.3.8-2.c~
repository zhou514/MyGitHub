#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <fcntl.h>
#include <errno.h>
#include <sys/stat.h>
#include <sys/types.h>
struct STU{
   int num;
   char name[32];
};

int main(int argc,char **argv){
    struct STU stu[5]={
       {23,"asdf"},
       {34,"gadf"},
       {44,"gasdfsaf"},
       {33,"ffffff"},
       {22,"fssssssss"}
    };
    int fd;
    int ishas=!access(argv[1],0);
    if(ishas)
       fd=open(argv[1],O_RDWR);
    else
       fd=open(argv[1],O_CREAT | O_RDWR);
    
    if (fd<0){
         printf("errno= %s\n",strerror(errno));
         return -1;
    				}
    //----------------------------------------
    if (ishas){
       int size=lseek(fd,0,2);
       int n=size/sizeof(struct STU);
       lseek(fd,0,0);
       struct STU *p=(struct STU *)malloc(size);
       //第一种方式
       //size=read(fd,p,size);
       //第二种方式
       for(int i=0;i<5;i++) 
                 read(fd,p,sizeof(struct STU));
       //第三种方式
       //void *pv=p;
       //for(i=0;i<n;i++) {
         // read(fd,pv,4); fd+=4;
         // read(fd,pv,32);fd+=32;
       //}
      // for(int i=0;i<n;i++) printf("%d,%s\n",p->num,p->name);
    }
    else {
       //第一种方法
      //int size=write(fd,stu,sizeof(struct STU)*5);
       //第二种方法
     for(int i=0;i<5;i++) write(fd,&stu[i],sizeof(struct STU));
       //第三种方法
       //void *pv=p;
       //for(i=0;i<sizeof(struct STU)*5;i++) write(fd,pv++,1);
    }
    close(fd);
    return 0;
}

