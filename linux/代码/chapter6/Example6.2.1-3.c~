#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <errno.h>
int main(int argc,char **argv){
    char buf[256];
    pid_t pid=fork(); //用fork创建子进程后，子进程具有与父进程同样的代码
    //pid为-1，代表没有创建成功，目前还只有一个进程
    if(pid==-1) return 0;
    //如果创建成功，则父子进程中都会从fork执行代码
    //为区分开代码是要从子进程运行还是父进程中运行，用pid判断
    else if (pid==0){ //指定子进程要执行的代码 
       strcpy(buf,"我是子进程");
       int i,a=10;
       for(i=0;i<10;i++) {
          printf("son ---- %d\n",i);
          sleep(1);
       }
    }
    else { //父进程要执行的代码
       strcpy(buf,"我是父进程");
       int i,a=20;
       for(i=5;i<a;i++){
          printf("parent---- %d\n",i);
          sleep(3);
       }
    }
    //父子进程都会执行的代码
    printf("---- %s,my pid= %d\n",buf,getpid());
    return 0;
}
